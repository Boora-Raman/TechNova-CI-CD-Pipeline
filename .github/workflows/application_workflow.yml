name:  CI/CD Pipeline TechNova-Application

on:
  push:
    branches:
      - main
    paths:
      - "technova-node-app/**"


env:
  IMAGE_NAME: booraraman/technova-app
  IMAGE_TAG: ${{ github.sha }}

jobs:

  build-and-push:
    name: Build & Push Docker Image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Code Checkout For Sonar   
        uses: actions/checkout@v4
        with:  
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        working-directory: ./technova-node-app
        run: npm install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:${{ env.IMAGE_TAG }} ./technova-node-app
          echo "Built Docker image: $IMAGE_NAME:${{ env.IMAGE_TAG }}"

      - name: Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      

      - name: Run Docker Container
        run: |
          docker run -d -p 3000:3000 ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # - name: Run OWASP ZAP Full Scan
      #   uses: zaproxy/action-full-scan@v0.10.0
      #   with:
      #     target: 'http://localhost:3000/'
      #     fail_action: false
      #     cmd_options: '-a'


      - name: Push Docker Image
        run: |
          docker push $IMAGE_NAME:${{ env.IMAGE_TAG }}
          echo "Pushed Docker image: $IMAGE_NAME:${{ env.IMAGE_TAG }}"

      - name: Save Image Tag and Repo as Artifacts
        run: |
          echo "${{ env.IMAGE_TAG }}" > image-tag.txt
          echo "${{ env.IMAGE_NAME }}" > image-repo.txt

      - name: Upload Image Tag Artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image-tag.txt

      - name: Upload Image Repo Artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-repo
          path: image-repo.txt

  update-ecs-task:
    name: Update Docker Image In Terraform Files
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Image Tag Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag
          path: .

      - name: Download Image Repo Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-repo
          path: .

      - name: Read Tag and Repo into Environment
        run: |
          echo "IMAGE_TAG=$(cat image-tag.txt)" >> $GITHUB_ENV
          echo "IMAGE_REPO=$(cat image-repo.txt)" >> $GITHUB_ENV

      - name: Update Docker Image in ecs task definiton
        run: |
          FILE="Terraform-Deployment/ECS-Cluster/ecs-task-definition.tf"
          sed -i "11s|image = \".*\"|image = \"${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}\"|" "$FILE"
          echo "Updated ECS task image to ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}"

      - name: Set up SSH for Git Push
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add Terraform-Deployment/ECS-Cluster/ecs-task-definition.tf
          git commit -m "Updated Docker image In Ec2 User Script to ${{ env.IMAGE_TAG }}"
          git push git@github.com:${{ github.repository }}.git HEAD:main
